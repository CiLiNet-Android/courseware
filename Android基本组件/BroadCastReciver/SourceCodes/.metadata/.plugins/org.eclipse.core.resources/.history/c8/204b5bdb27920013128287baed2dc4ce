package com.cilinet.dynamicUpdateUI;

import java.lang.reflect.Field;

import android.app.Activity;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.util.Log;
import android.view.Window;
import android.widget.ImageView;

/**
 * 主界面，由startService和broadcastreceiver配合动态更新UI
 * **/
public class MainActivity extends Activity {
	
	private static final String TAG = "MainActivity";
	
	private static final String UPDATEUI_ACTION = "com.cilinet.action.UPDATEUI";
	
	private ImageView imgV_number;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		super.requestWindowFeature(Window.FEATURE_NO_TITLE);
		
		super.setContentView(R.layout.activity_main);
		
		imgV_number = (ImageView)findViewById(R.id.imgV_number);
		imgV_number.setImageBitmap(getBitmapByNumber(3));
		//imgV_number.setImageDrawable(new BitmapDrawable(_numberBitmap));
		
		//动态注册BroadcastReceiver
		IntentFilter _intentFilter = new IntentFilter(UPDATEUI_ACTION);
		DynamicUpdateUIBroadcastReceiver _receiver = new DynamicUpdateUIBroadcastReceiver();
		super.registerReceiver(_receiver, _intentFilter);
		
		
	}
	
	
	/** 根据整型参数，反射获取其所代表的的图片资源ID **/
	private int getDrawableResIdByNunber(int number){
		int _drawableResId = -1;
		
		try {
			Class<?> _classObject = Class.forName("com.cilinet.dynamicUpdateUI.R$drawable");
			
			Field _fieldObject = _classObject.getField("number_" + number);
			_drawableResId = _fieldObject.getInt(null);//静态方法，传入null即可
			
		} catch (Exception e) {
			e.printStackTrace();
		} 
		
		return _drawableResId;
	}
	
	/** 根据整型数字获取其对应的图片的Bitmap对象 **/
	private Bitmap getBitmapByNumber(int number){
		int _drawableResId = getDrawableResIdByNunber(number);
		Bitmap _bitmap = BitmapFactory.decodeResource(getResources(), _drawableResId);
		
		return _bitmap;
	}
	

}
