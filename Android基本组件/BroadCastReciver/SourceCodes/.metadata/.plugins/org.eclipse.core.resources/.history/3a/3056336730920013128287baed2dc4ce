package com.cilinet.dynamicUpdateUI;

import java.util.Timer;
import java.util.TimerTask;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.support.v4.content.LocalBroadcastManager;
import android.util.Log;

/** 计算时间，然后发送广播通知，这样就完成了Activity和startService的交互 **/
public class DynamicUpdateUIService extends Service {
	
	private static final String TAG = "DynamicUpdateUIService";
	
	private int number;
	
	private boolean mIsRunning;
	
	@Override
	public IBinder onBind(Intent arg0) {
		return null;
	}
	
	private Timer mTimer;

	@Override
	public void onCreate() {
		super.onCreate();
		Log.i(TAG, "onCreate()..");
		
		mTimer = new Timer();
		//这个方法会使timer直接启动
		mTimer.schedule(new TimerTask() {
			@Override
			public void run() {
				Intent _intent = new Intent();
				_intent.setAction(MainActivity.BROADCAST_ACTION_UPDATEUI);
				//DynamicUpdateUIService.this.sendBroadcast(intent);
				LocalBroadcastManager.getInstance(DynamicUpdateUIService.this).sendBroadcast(_intent);
			}
		},1000,1000);//延迟1秒，执行1秒
	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Log.i(TAG, "onStartCommand()..");
		
		
		return super.onStartCommand(intent, flags, startId);
	}

	@Override
	public void onDestroy() {
		Log.i(TAG, "onDestroy()..");
		
		mTimer.cancel();
		mTimer = null;
		
		super.onDestroy();
	}
	
	
	

}
